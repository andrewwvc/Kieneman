#0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CL-STORE"))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|AIF|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|AIF|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|AIF|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-STORE|::|TEST|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-STORE|::|THEN| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-STORE|::|ELSE| (|COMMON-LISP|::|CADDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|AIF|
       `(|COMMON-LISP|::|LET| ((|CL-STORE|::|IT| ,|CL-STORE|::|TEST|))
         (|COMMON-LISP|::|IF| |CL-STORE|::|IT| ,|CL-STORE|::|THEN|
          ,|CL-STORE|::|ELSE|)))))))
  '(|CL-STORE|::|TEST| |CL-STORE|::|THEN| |COMMON-LISP|::|&OPTIONAL|
    |CL-STORE|::|ELSE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|WITH-GENSYMS|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|WITH-GENSYMS|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|WITH-GENSYMS|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-STORE|::|NAMES|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-STORE|::|BODY| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|WITH-GENSYMS|
       `(|COMMON-LISP|::|LET|
         ,(|COMMON-LISP|::|MAPCAR|
           #'(|COMMON-LISP|::|LAMBDA| (|CL-STORE|::|X|)
              `(,|CL-STORE|::|X| (|COMMON-LISP|::|GENSYM|)))
           |CL-STORE|::|NAMES|)
         ,@|CL-STORE|::|BODY|))))))
  '(|CL-STORE|::|NAMES| |COMMON-LISP|::|&BODY| |CL-STORE|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|SERIALIZABLE-SLOTS|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|SERIALIZABLE-SLOTS-USING-CLASS|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|GET-SLOT-DETAILS|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|WHEN-LET|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|WHEN-LET|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|WHEN-LET|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G5562| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G5563|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2. 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|CL-STORE|::|WHEN-LET| #1#
          '#4=(|CL-STORE|::|VAR| |CL-STORE|::|TEST|))
         #1#))
       (|CL-STORE|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|CL-STORE|::|TEST| (|COMMON-LISP|::|CADR| #3#))
       (|CL-STORE|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|WHEN-LET|
       `(|COMMON-LISP|::|LET| ((,|CL-STORE|::|VAR| ,|CL-STORE|::|TEST|))
         (|COMMON-LISP|::|WHEN| ,|CL-STORE|::|VAR| ,@|CL-STORE|::|BODY|)))))))
  '(#4# |COMMON-LISP|::|&BODY| |CL-STORE|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|FLOAT-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|FLOAT|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|GET-FLOAT-TYPE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|NUM|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|SYSTEM|::|%PUT| '|CL-STORE|::|UB32| '|SYSTEM|::|DEFTYPE-EXPANDER|
  (|COMMON-LISP|::|FUNCTION| #:|DEFTYPE-UB32|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<DEFTYPE-FORM>|)
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<DEFTYPE-FORM>| 1.
       1.))
     (|SYSTEM|::|TYPE-CALL-ERROR| |SYSTEM|::|<DEFTYPE-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|UB32|
       `(|COMMON-LISP|::|UNSIGNED-BYTE| 32.)))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|UB32| '|COMMON-LISP|::|TYPE|
  '|COMMON-LISP|::|NIL|)
 '|CL-STORE|::|UB32|)
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|SYSTEM|::|%PUT| '|CL-STORE|::|SB32| '|SYSTEM|::|DEFTYPE-EXPANDER|
  (|COMMON-LISP|::|FUNCTION| #:|DEFTYPE-SB32|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<DEFTYPE-FORM>|)
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<DEFTYPE-FORM>| 1.
       1.))
     (|SYSTEM|::|TYPE-CALL-ERROR| |SYSTEM|::|<DEFTYPE-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|SB32|
       `(|COMMON-LISP|::|SIGNED-BYTE| 32.)))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|SB32| '|COMMON-LISP|::|TYPE|
  '|COMMON-LISP|::|NIL|)
 '|CL-STORE|::|SB32|)
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|SYSTEM|::|%PUT| '|CL-STORE|::|ARRAY-SIZE| '|SYSTEM|::|DEFTYPE-EXPANDER|
  (|COMMON-LISP|::|FUNCTION| #:|DEFTYPE-ARRAY-SIZE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<DEFTYPE-FORM>|)
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<DEFTYPE-FORM>| 1.
       1.))
     (|SYSTEM|::|TYPE-CALL-ERROR| |SYSTEM|::|<DEFTYPE-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|ARRAY-SIZE|
       `(|COMMON-LISP|::|INTEGER| 0.
         ,|COMMON-LISP|::|ARRAY-DIMENSION-LIMIT|)))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|ARRAY-SIZE|
  '|COMMON-LISP|::|TYPE| '"The maximum size of a vector")
 '|CL-STORE|::|ARRAY-SIZE|)
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|SYSTEM|::|%PUT| '|CL-STORE|::|ARRAY-TOT-SIZE| '|SYSTEM|::|DEFTYPE-EXPANDER|
  (|COMMON-LISP|::|FUNCTION| #:|DEFTYPE-ARRAY-TOT-SIZE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<DEFTYPE-FORM>|)
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<DEFTYPE-FORM>| 1.
       1.))
     (|SYSTEM|::|TYPE-CALL-ERROR| |SYSTEM|::|<DEFTYPE-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|ARRAY-TOT-SIZE|
       `(|COMMON-LISP|::|INTEGER| 0.
         ,|COMMON-LISP|::|ARRAY-TOTAL-SIZE-LIMIT|)))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|ARRAY-TOT-SIZE|
  '|COMMON-LISP|::|TYPE| '"The maximum total size of an array")
 '|CL-STORE|::|ARRAY-TOT-SIZE|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|STORE-32-BIT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-STORE|::|OBJ| |COMMON-LISP|::|STREAM|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|MAKE-UB32|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|MAKE-UB32|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|MAKE-UB32|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 5.
       5.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-STORE|::|A|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-STORE|::|B| (|COMMON-LISP|::|CADDR| . #1#))
       (|CL-STORE|::|C| (|COMMON-LISP|::|CADDDR| . #1#))
       (|CL-STORE|::|D| (|COMMON-LISP|::|FIFTH| . #1#)))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|MAKE-UB32|
       `(|COMMON-LISP|::|THE| |CL-STORE|::|UB32|
         (|COMMON-LISP|::|LOGIOR| (|COMMON-LISP|::|ASH| ,|CL-STORE|::|A| 24.)
          (|COMMON-LISP|::|ASH| ,|CL-STORE|::|B| 16.)
          (|COMMON-LISP|::|ASH| ,|CL-STORE|::|C| 8.) ,|CL-STORE|::|D|)))))))
  '(|CL-STORE|::|A| |CL-STORE|::|B| |CL-STORE|::|C| |CL-STORE|::|D|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|READ-32-BIT|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-STORE|::|BUF| |COMMON-LISP|::|&OPTIONAL|
    (|CL-STORE|::|SIGNED| |COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|KWD|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|MKSTR|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |CL-STORE|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|SYMBOLICATE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&REST| |CL-STORE|::|SYMS|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|SAFE-LENGTH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|COMMON-LISP|::|LIST|)))
