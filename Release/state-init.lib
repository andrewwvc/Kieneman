#0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "KIENEMAN"))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|CHANGE-STATE|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|TRANSITION-STATE|
 '#(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ENTER-STATE|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|EXIT-STATE|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|TRANSITION-ANIMATION|
 '#(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ENTER-ANIMATION|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|EXIT-ANIMATION|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ANIMATE|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|STATE| '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|PARENT| |KIENEMAN|::|RADIUS| |KIENEMAN|::|HEIGHT|
   |KIENEMAN|::|KEY-BUFFER|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|STATE| '|KIENEMAN|::|SUPERS|)
 '(|KIENEMAN|::|LOW-Y-BOX|))
(|COMMON-LISP|::|LET*| ((#1=#:|G9077| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|KIENEMAN|::|STATE|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST| '|KIENEMAN|::|LOW-Y-BOX|)
  :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|PARENT| :|READERS|
    '(|KIENEMAN|::|PARENT|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|PARENT|)) :|INITARGS| '(:|PARENT|))
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|RADIUS| :|READERS|
    '(|KIENEMAN|::|RADIUS|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|RADIUS|)) :|INITARGS| '(:|RADIUS|)
    :|INITFORM| '#2=1.0f0 :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| #2#))
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|HEIGHT| :|READERS|
    '(|KIENEMAN|::|HEIGHT|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|HEIGHT|)) :|INITARGS| '(:|HEIGHT|)
    :|INITFORM| '#3=1.0f0 :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| #3#))
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|KEY-BUFFER| :|READERS|
    '(|KIENEMAN|::|KEY-BUFFER|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|KEY-BUFFER|)) :|INITARGS|
    '(:|KEY-BUFFER|) :|INITFORM|
    '#4=(|CLOS|::|MAKE-INSTANCE| '|KIENEMAN|::|KEY-BUFFERER|) :|INITFUNCTION|
    (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|DEFAULT-KEY-BUFFER|
     (|COMMON-LISP|::|LAMBDA| |COMMON-LISP|::|NIL| #4#))))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|PARENT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|PARENT|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|RADIUS|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|RADIUS|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|HEIGHT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|HEIGHT|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|KEY-BUFFER|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|KEY-BUFFER|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|SINGLEBOX-STATE| '|KIENEMAN|::|SLOTS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|SINGLEBOX-STATE| '|KIENEMAN|::|SUPERS|)
 '(|KIENEMAN|::|RECTANGULAR-HITBOX| |KIENEMAN|::|DISPLAYED-BOX|))
(|COMMON-LISP|::|LET*| ((#1=#:|G9159| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|KIENEMAN|::|SINGLEBOX-STATE| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|KIENEMAN|::|RECTANGULAR-HITBOX|
   '|KIENEMAN|::|DISPLAYED-BOX|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|MULTIBOX-STATE| '|KIENEMAN|::|SLOTS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|MULTIBOX-STATE| '|KIENEMAN|::|SUPERS|)
 '(|KIENEMAN|::|STATE| |KIENEMAN|::|MULTI-HITBOX|))
(|COMMON-LISP|::|LET*| ((#1=#:|G9176| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|KIENEMAN|::|MULTIBOX-STATE|
  :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|KIENEMAN|::|STATE| '|KIENEMAN|::|MULTI-HITBOX|)
  :|DIRECT-SLOTS| (|COMMON-LISP|::|LIST|) :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|PRINT-STATE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|BEGIN-FRAME|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ATTACK-BLOCKED|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|LINEAR-TRACKING|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|LINEAR-TRACKING|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|SIDE-SPD|
 '#(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|SIDE-SPD|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|PARTIAL-TRACKING| '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|SIDE-DIST|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|PARTIAL-TRACKING| '|KIENEMAN|::|SUPERS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|LET*| ((#1=#:|G9361| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|KIENEMAN|::|PARTIAL-TRACKING| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|SIDE-DIST| :|READERS|
    '(|KIENEMAN|::|SIDE-DIST|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|SIDE-DIST|)) :|INITARGS|
    '(:|SIDE-DIST|) :|INITFORM| '#2=0.0f0 :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| #2#)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|SIDE-DIST|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|SIDE-DIST|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|MAIN-ACTION|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|COMPONENT-VELOCITY| '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|DIR| |KIENEMAN|::|SPD|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|COMPONENT-VELOCITY| '|KIENEMAN|::|SUPERS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|LET*| ((#1=#:|G9429| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|KIENEMAN|::|COMPONENT-VELOCITY| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|DIR| :|READERS|
    '(|KIENEMAN|::|DIR|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|DIR|)) :|INITARGS| '(:|DIR|))
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|SPD| :|READERS|
    '(|KIENEMAN|::|SPD|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|SPD|)) :|INITARGS| '(:|SPD|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|DIR|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|DIR|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|SPD|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|SPD|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CLOS|::|INITIALIZE-INSTANCE|
 #(1. 0. |COMMON-LISP|::|T| |COMMON-LISP|::|T| (:|VEL|) |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|LINEAR-TIMER| '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|TPOS|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|LINEAR-TIMER| '|KIENEMAN|::|SUPERS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|LET*| ((#1=#:|G9512| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|KIENEMAN|::|LINEAR-TIMER|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|TPOS| :|READERS|
    '(|KIENEMAN|::|TPOS|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|TPOS|)) :|INITARGS| '(:|TPOS|)
    :|INITFORM| '0. :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| 0.)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|TPOS|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|TPOS|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|MAIN-ACTION|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|BETWEEN|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|BETWEEN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|BETWEEN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|START|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KIENEMAN|::|END| (|COMMON-LISP|::|CADDR| . #1#))
       (|KIENEMAN|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|BETWEEN|
       (|COMMON-LISP|::|IF| |KIENEMAN|::|BODY|
        `(|COMMON-LISP|::|WHEN|
          (|COMMON-LISP|::|AND|
           (|COMMON-LISP|::|>| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|START|)
           (|COMMON-LISP|::|<| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|END|))
          ,@|KIENEMAN|::|BODY|)
        `(|COMMON-LISP|::|AND|
          (|COMMON-LISP|::|>| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|START|)
          (|COMMON-LISP|::|<| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|END|))))))))
  '(|KIENEMAN|::|START| |KIENEMAN|::|END| |COMMON-LISP|::|&BODY|
    |KIENEMAN|::|BODY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|WITHIN|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|WITHIN|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|WITHIN|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|START|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KIENEMAN|::|END| (|COMMON-LISP|::|CADDR| . #1#))
       (|KIENEMAN|::|BODY| (|COMMON-LISP|::|CDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|WITHIN|
       (|COMMON-LISP|::|IF| |KIENEMAN|::|BODY|
        `(|COMMON-LISP|::|WHEN|
          (|COMMON-LISP|::|AND|
           (|COMMON-LISP|::|>=| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|START|)
           (|COMMON-LISP|::|<=| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|END|))
          ,@|KIENEMAN|::|BODY|)
        `(|COMMON-LISP|::|AND|
          (|COMMON-LISP|::|>=| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|START|)
          (|COMMON-LISP|::|<=| |KIENEMAN|::|TPOS| ,|KIENEMAN|::|END|))))))))
  '(|KIENEMAN|::|START| |KIENEMAN|::|END| |COMMON-LISP|::|&BODY|
    |KIENEMAN|::|BODY|)))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|SINGLE-ATTACK-BOX| '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|HITBOX|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|SINGLE-ATTACK-BOX| '|KIENEMAN|::|SUPERS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|LET*| ((#1=#:|G9595| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|KIENEMAN|::|SINGLE-ATTACK-BOX| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|HITBOX| :|READERS|
    '(|KIENEMAN|::|HITBOX|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|HITBOX|)) :|INITARGS| '(:|HITBOX|)
    :|INITFORM| '|COMMON-LISP|::|NIL| :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|HITBOX|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|HITBOX|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|SET-HITBOX|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|SET-HITBOX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|SET-HITBOX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.
       2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|BOX| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|SET-HITBOX|
       `(|COMMON-LISP|::|LET| ((|KIENEMAN|::|HB| ,|KIENEMAN|::|BOX|))
         (|COMMON-LISP|::|SETF| |KIENEMAN|::|HITBOX| |KIENEMAN|::|HB|)
         (|KIENEMAN|::|ADD-ACTOR| |KIENEMAN|::|HB|)))))))
  '(|KIENEMAN|::|BOX|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|REMOVE-HITBOX|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|REMOVE-HITBOX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|REMOVE-HITBOX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 1.
       1.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|REMOVE-HITBOX|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|WHEN| |KIENEMAN|::|HITBOX|
          (|KIENEMAN|::|KILL| |KIENEMAN|::|HITBOX|))
         (|COMMON-LISP|::|SETF| |KIENEMAN|::|HITBOX|
          |COMMON-LISP|::|NIL|)))))))
  '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|EXIT-STATE|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ATTACK-BLOCKED|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|MOVEMENT-INDEPENDENT-ANIMATION|
  '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|ANIMATION-DISTANCE|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|MOVEMENT-INDEPENDENT-ANIMATION|
  '|KIENEMAN|::|SUPERS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|LET*| ((#1=#:|G9700| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|KIENEMAN|::|MOVEMENT-INDEPENDENT-ANIMATION| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|ANIMATION-DISTANCE| :|READERS|
    '(|KIENEMAN|::|ANIMATION-DISTANCE|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|ANIMATION-DISTANCE|)) :|INITARGS|
    '(:|ANIMATION-DISTANCE|) :|INITFORM| '#2=0.0f0 :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| #2#)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ANIMATION-DISTANCE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|ANIMATION-DISTANCE|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ANIMATE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|ANIMATE-FORWARD|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|ANIMATE-FORWARD|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|ANIMATE-FORWARD|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.
       2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|DIST| (|COMMON-LISP|::|CADR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|ANIMATE-FORWARD|
       `(|COMMON-LISP|::|LET|
         ((|KIENEMAN|::|DIST-VEC|
           (|COMMON-LISP|::|*| ,|KIENEMAN|::|DIST|
            (|KIENEMAN|::|GET-DIRECTION| |KIENEMAN|::|FIGHTER|))))
         (|COMMON-LISP|::|INCF| |KIENEMAN|::|X| |KIENEMAN|::|DIST-VEC|)
         (|COMMON-LISP|::|INCF| |KIENEMAN|::|ANIMATION-DISTANCE|
          |KIENEMAN|::|DIST-VEC|)))))))
  '(|KIENEMAN|::|DIST|)))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|KEY-BUFFERER| '|KIENEMAN|::|SLOTS|)
 '(|KIENEMAN|::|KEY-LABEL| |KIENEMAN|::|PRESSED| |KIENEMAN|::|OTHERS-HELD|))
(|COMMON-LISP|::|SETF|
 (|COMMON-LISP|::|GET| '|KIENEMAN|::|KEY-BUFFERER| '|KIENEMAN|::|SUPERS|)
 '|COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|LET*| ((#1=#:|G9771| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS| '|KIENEMAN|::|KEY-BUFFERER|
  :|DIRECT-SUPERCLASSES| (|COMMON-LISP|::|LIST|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|KEY-LABEL| :|READERS|
    '(|KIENEMAN|::|KEY-LABEL|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|KEY-LABEL|)) :|INITARGS|
    '(:|KEY-LABEL|) :|INITFORM| '|COMMON-LISP|::|NIL| :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|PRESSED| :|READERS|
    '(|KIENEMAN|::|PRESSED|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|PRESSED|)) :|INITARGS| '(:|PRESSED|)
    :|INITFORM| '|COMMON-LISP|::|T| :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|T|))
   (|COMMON-LISP|::|LIST| :|NAME| '|KIENEMAN|::|OTHERS-HELD| :|READERS|
    '(|KIENEMAN|::|OTHERS-HELD|) :|WRITERS|
    '((|COMMON-LISP|::|SETF| |KIENEMAN|::|OTHERS-HELD|)) :|INITARGS|
    '(:|OTHERS-HELD|) :|INITFORM| '|COMMON-LISP|::|NIL| :|INITFUNCTION|
    (|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|)))
  :|METACLASS| #1#
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|DOCUMENTATION| |COMMON-LISP|::|NIL| :|GENERIC-ACCESSORS|
    '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|KEY-LABEL|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|KEY-LABEL|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|PRESSED|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|PRESSED|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|OTHERS-HELD|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '(|COMMON-LISP|::|SETF| |KIENEMAN|::|OTHERS-HELD|)
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|GET-TAPPEDF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KIENEMAN|::|KEY-BUFFER| |KIENEMAN|::|KEY| |COMMON-LISP|::|&KEY|
    |KIENEMAN|::|RELEASED| |KIENEMAN|::|OTHERS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|GET-TAPPED|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|GET-TAPPED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|GET-TAPPED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G9844| (|COMMON-LISP|::|CDDR| . #1#))
       (|KIENEMAN|::|RELEASED|
        (|COMMON-LISP|::|GETF| #2# ':|RELEASED| . #3=(|COMMON-LISP|::|NIL|)))
       (|KIENEMAN|::|OTHERS| (|COMMON-LISP|::|GETF| #2# ':|OTHERS| . #3#)))
      (|SYSTEM|::|KEYWORD-TEST| #2# '(:|OTHERS| :|RELEASED|))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|GET-TAPPED|
       `(|KIENEMAN|::|GET-TAPPEDF| |KIENEMAN|::|KEY-BUFFER| ,|KIENEMAN|::|KEY|
         :|RELEASED| ,|KIENEMAN|::|RELEASED| :|OTHERS|
         ,|KIENEMAN|::|OTHERS|))))))
  '(|KIENEMAN|::|KEY| |COMMON-LISP|::|&KEY| |KIENEMAN|::|RELEASED|
    |KIENEMAN|::|OTHERS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|GET-UNTAPPED|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|GET-UNTAPPED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|GET-UNTAPPED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G9854| (|COMMON-LISP|::|CDDR| . #1#))
       (|KIENEMAN|::|OTHERS|
        (|COMMON-LISP|::|GETF| #2# ':|OTHERS| |COMMON-LISP|::|NIL|)))
      (|SYSTEM|::|KEYWORD-TEST| #2# '(:|OTHERS|))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|GET-UNTAPPED|
       `(|KIENEMAN|::|GET-TAPPEDF| |KIENEMAN|::|KEY-BUFFER| ,|KIENEMAN|::|KEY|
         :|RELEASED| |COMMON-LISP|::|T| :|OTHERS| ,|KIENEMAN|::|OTHERS|))))))
  '(|KIENEMAN|::|KEY| |COMMON-LISP|::|&KEY| |KIENEMAN|::|OTHERS|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|RESET-KEY-BUFFER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KIENEMAN|::|KEY-BUFFER|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|SET-TAPPEDF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KIENEMAN|::|KEY-BUFFER| |KIENEMAN|::|KEY| |COMMON-LISP|::|&KEY|
    |KIENEMAN|::|RELEASED| |KIENEMAN|::|OTHERS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|SET-TAPPED|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|SET-TAPPED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|SET-TAPPED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G9893| (|COMMON-LISP|::|CDDR| . #1#))
       (|KIENEMAN|::|RELEASED|
        (|COMMON-LISP|::|GETF| #2# ':|RELEASED| . #3=(|COMMON-LISP|::|NIL|)))
       (|KIENEMAN|::|OTHERS| (|COMMON-LISP|::|GETF| #2# ':|OTHERS| . #3#)))
      (|SYSTEM|::|KEYWORD-TEST| #2# '(:|OTHERS| :|RELEASED|))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|SET-TAPPED|
       `(|KIENEMAN|::|SET-TAPPEDF| |KIENEMAN|::|KEY-BUFFER| ,|KIENEMAN|::|KEY|
         :|RELEASED| ,|KIENEMAN|::|RELEASED| :|OTHERS|
         ,|KIENEMAN|::|OTHERS|))))))
  '(|KIENEMAN|::|KEY| |COMMON-LISP|::|&KEY| |KIENEMAN|::|RELEASED|
    |KIENEMAN|::|OTHERS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|SET-UNTAPPED|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|SET-UNTAPPED|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|SET-UNTAPPED|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G9903| (|COMMON-LISP|::|CDDR| . #1#))
       (|KIENEMAN|::|OTHERS|
        (|COMMON-LISP|::|GETF| #2# ':|OTHERS| |COMMON-LISP|::|NIL|)))
      (|SYSTEM|::|KEYWORD-TEST| #2# '(:|OTHERS|))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|SET-UNTAPPED|
       `(|KIENEMAN|::|SET-TAPPEDF| |KIENEMAN|::|KEY-BUFFER| ,|KIENEMAN|::|KEY|
         :|RELEASED| |COMMON-LISP|::|T| :|OTHERS| ,|KIENEMAN|::|OTHERS|))))))
  '(|KIENEMAN|::|KEY| |COMMON-LISP|::|&KEY| |KIENEMAN|::|OTHERS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|TAPPED-LIST|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|TAPPED-LIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|TAPPED-LIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|KEY-LIST|
        (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|TAPPED-LIST|
       `(|COMMON-LISP|::|PROGN|
         ,@(|COMMON-LISP|::|MAPCAR|
            #'(|COMMON-LISP|::|LAMBDA| (|KIENEMAN|::|KEY|)
               `(|COMMON-LISP|::|IF|
                 (|KIENEMAN|::|GET-PRESSED| ,|KIENEMAN|::|KEY|)
                 (|KIENEMAN|::|SET-TAPPED| ,|KIENEMAN|::|KEY|)))
            |KIENEMAN|::|KEY-LIST|)))))))
  '(|COMMON-LISP|::|&REST| |KIENEMAN|::|KEY-LIST|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|UNTAPPED-LIST|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|UNTAPPED-LIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|UNTAPPED-LIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|KEY-LIST|
        (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|UNTAPPED-LIST|
       `(|COMMON-LISP|::|PROGN|
         ,@(|COMMON-LISP|::|MAPCAR|
            #'(|COMMON-LISP|::|LAMBDA| (|KIENEMAN|::|KEY|)
               `(|COMMON-LISP|::|IF|
                 (|COMMON-LISP|::|NOT|
                  (|KIENEMAN|::|GET-PRESSED| ,|KIENEMAN|::|KEY|))
                 (|KIENEMAN|::|SET-UNTAPPED| ,|KIENEMAN|::|KEY|)))
            |KIENEMAN|::|KEY-LIST|)))))))
  '(|COMMON-LISP|::|&REST| |KIENEMAN|::|KEY-LIST|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ENTER-STATE|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|EXIT-STATE|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|X|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|Y|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|RADIUS|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|HEIGHT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|BOTTOM|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|TOP|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|LEFT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|RIGHT|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|MAIN-ACTION|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ANIMATE|
 #(1. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|DEFANIM|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|DEFANIM|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|DEFANIM|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 4.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KIENEMAN|::|SUPERS| (|COMMON-LISP|::|CADDR| . #1#))
       (|KIENEMAN|::|BODY| (|COMMON-LISP|::|CADDDR| . #1#))
       (|KIENEMAN|::|META| (|COMMON-LISP|::|CDDDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|DEFANIM|
       `(|KIENEMAN|::|DEFCLASS+| ,|KIENEMAN|::|NAME|
         (|KIENEMAN|::|SINGLE-ANIMATION| |KIENEMAN|::|STATE|
          ,@|KIENEMAN|::|SUPERS|)
         ((|KIENEMAN|::|NAME| :|INITFORM|
           ,(|COMMON-LISP|::|STRING| |KIENEMAN|::|NAME|))
          ,@|KIENEMAN|::|BODY|)
         ,@|KIENEMAN|::|META|))))))
  '(|KIENEMAN|::|NAME| |KIENEMAN|::|SUPERS| |KIENEMAN|::|BODY|
    |COMMON-LISP|::|&REST| |KIENEMAN|::|META|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|SWITCH-TO-STATE|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|SWITCH-TO-STATE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|SWITCH-TO-STATE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Switches states."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|STATE-NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|KIENEMAN|::|ARGS| (|COMMON-LISP|::|CDDR| . #1#)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|SWITCH-TO-STATE|
       `(|COMMON-LISP|::|PROGN|
         (|COMMON-LISP|::|LET|
          ((|KIENEMAN|::|STATE|
            (|CLOS|::|MAKE-INSTANCE| ',|KIENEMAN|::|STATE-NAME|
             ,@|KIENEMAN|::|ARGS|)))
          (|KIENEMAN|::|CHANGE-STATE| |KIENEMAN|::|*FIGHTER*|
           |KIENEMAN|::|STATE|))))))))
  '(|KIENEMAN|::|STATE-NAME| |COMMON-LISP|::|&REST| |KIENEMAN|::|ARGS|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|DIRECT-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KIENEMAN|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|INHERITED-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KIENEMAN|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|ALL-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|KIENEMAN|::|NAME|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|NEW-CLASS-ALL-SLOTS|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KIENEMAN|::|SLOTS| |KIENEMAN|::|SUPERCLASSES|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|DEFSTATE|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|DEFSTATE|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|DEFSTATE|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|NAME|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G10320| (|COMMON-LISP|::|CDDR| . #1#))
       (|KIENEMAN|::|SLOTS|
        (|COMMON-LISP|::|GETF| #2# ':|SLOTS| . #3=(|COMMON-LISP|::|NIL|)))
       (|COMMON-LISP|::|REST| (|COMMON-LISP|::|GETF| #2# ':|REST| . #3#))
       (|KIENEMAN|::|SUPERS| (|COMMON-LISP|::|GETF| #2# ':|SUPERS| . #3#))
       (|KIENEMAN|::|CONSTANTS|
        (|COMMON-LISP|::|GETF| #2# ':|CONSTANTS| . #3#))
       (|KIENEMAN|::|FUNCS| (|COMMON-LISP|::|GETF| #2# ':|FUNCS| . #3#))
       (|KIENEMAN|::|MAIN-ACTION|
        (|COMMON-LISP|::|GETF| #2# ':|MAIN-ACTION| . #3#))
       (|KIENEMAN|::|INITFUNC| (|COMMON-LISP|::|GETF| #2# ':|INITFUNC| . #3#))
       (|KIENEMAN|::|ENTRYFUNC|
        (|COMMON-LISP|::|GETF| #2# ':|ENTRYFUNC| . #3#))
       (|COMMON-LISP|::|TYPE|
        (|COMMON-LISP|::|LET|
         ((#4=#:|KWD-ARG-10321|
           (|COMMON-LISP|::|GETF| #2# ':|TYPE| '#5=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #4# '#5#)
          (|COMMON-LISP|::|PROGN| #6='|KIENEMAN|::|STATE|) #4#)))
       (|KIENEMAN|::|HB|
        (|COMMON-LISP|::|LET|
         ((#7=#:|KWD-ARG-10322| (|COMMON-LISP|::|GETF| #2# ':|HB| '#5#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #7# '#5#)
          (|COMMON-LISP|::|PROGN| #8='|KIENEMAN|::|SINGLEBOX-STATE|) #7#)))
       (|KIENEMAN|::|ANIMATION|
        (|COMMON-LISP|::|LET|
         ((#9=#:|KWD-ARG-10323|
           (|COMMON-LISP|::|GETF| #2# ':|ANIMATION| '#5#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #9# '#5#)
          (|COMMON-LISP|::|PROGN| #10='|KIENEMAN|::|COMBINED-LINEAR-ANIMATION|)
          #9#)))
       (|KIENEMAN|::|LINEAR|
        (|COMMON-LISP|::|LET|
         ((#11=#:|KWD-ARG-10324| (|COMMON-LISP|::|GETF| #2# ':|LINEAR| '#5#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #11# '#5#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|T|) #11#)))
       (|KIENEMAN|::|ALT-NAME| (|COMMON-LISP|::|GETF| #2# ':|ALT-NAME| . #3#)))
      (|SYSTEM|::|KEYWORD-TEST| #2#
       '(:|ALT-NAME| :|LINEAR| :|ANIMATION| :|HB| :|TYPE| :|ENTRYFUNC|
         :|INITFUNC| :|MAIN-ACTION| :|FUNCS| :|CONSTANTS| :|SUPERS| :|REST|
         :|SLOTS|))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|DEFSTATE|
       (|COMMON-LISP|::|LET*|
        ((|COMMON-LISP|::|SYMBOL-NAME|
          (|COMMON-LISP|::|INTERN|
           (|COMMON-LISP|::|STRING-UPCASE| |KIENEMAN|::|NAME|)))
         (|KIENEMAN|::|SUPERS|
          (|COMMON-LISP|::|APPEND|
           (|COMMON-LISP|::|LIST| |COMMON-LISP|::|TYPE| |KIENEMAN|::|HB|)
           |KIENEMAN|::|SUPERS| (|COMMON-LISP|::|LIST| |KIENEMAN|::|ANIMATION|)
           (|COMMON-LISP|::|WHEN| |KIENEMAN|::|LINEAR|
            '(|KIENEMAN|::|LINEAR-TIMER|))))
         (|KIENEMAN|::|SLOT-NAMES|
          (|KIENEMAN|::|NEW-CLASS-ALL-SLOTS| |KIENEMAN|::|SLOTS|
           |KIENEMAN|::|SUPERS|))
         (|KIENEMAN|::|ACCESSORS|
          (|COMMON-LISP|::|CONS| '(|KIENEMAN|::|FIGHTER| |KIENEMAN|::|PARENT|)
           (|COMMON-LISP|::|MAPCAR|
            #'(|COMMON-LISP|::|LAMBDA| (|KIENEMAN|::|A|)
               (|COMMON-LISP|::|LIST| |KIENEMAN|::|A| |KIENEMAN|::|A|))
            |KIENEMAN|::|SLOT-NAMES|)))
         (|KIENEMAN|::|PRINT-STR|
          (|COMMON-LISP|::|APPLY| '|COMMON-LISP|::|CONCATENATE|
           (|COMMON-LISP|::|CONS| '|COMMON-LISP|::|STRING|
            (|COMMON-LISP|::|MAPCAR|
             #'(|COMMON-LISP|::|LAMBDA| (|FFI|::|SLOT|)
                (|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING|
                 (|COMMON-LISP|::|STRING| |FFI|::|SLOT|) ": ~a "))
             |KIENEMAN|::|SLOT-NAMES|))))
         (|KIENEMAN|::|PRINT-VALS|
          (|COMMON-LISP|::|MAPCAR|
           #'(|COMMON-LISP|::|LAMBDA| (|FFI|::|SLOT|)
              `(,|FFI|::|SLOT| |KIENEMAN|::|STATE|))
           |KIENEMAN|::|SLOT-NAMES|)))
        `(|COMMON-LISP|::|LET*| ,|KIENEMAN|::|CONSTANTS|
          (|KIENEMAN|::|DEFCLASS+| ,|COMMON-LISP|::|SYMBOL-NAME|
           ,|KIENEMAN|::|SUPERS|
           ,(|COMMON-LISP|::|CONS|
             `(|KIENEMAN|::|NAME| :|INITFORM|
               (|COMMON-LISP|::|IF| ,|KIENEMAN|::|ALT-NAME|
                ,|KIENEMAN|::|ALT-NAME| ,|KIENEMAN|::|NAME|))
             (|COMMON-LISP|::|MAPCAR|
              #'(|COMMON-LISP|::|LAMBDA| (|KIENEMAN|::|A|)
                 (|COMMON-LISP|::|CONS| :|IA| |KIENEMAN|::|A|))
              |KIENEMAN|::|SLOTS|)))
          (|COMMON-LISP|::|MACROLET|
           ((|KIENEMAN|::|FUNC-BODY| (|KIENEMAN|::|BODY|)
             `(|CLOS|::|WITH-ACCESSORS| ,',|KIENEMAN|::|ACCESSORS|
               |KIENEMAN|::|STATE|
               (|CLOS|::|WITH-ACCESSORS|
                ((|KIENEMAN|::|X| |KIENEMAN|::|X|)
                 (|KIENEMAN|::|Y| |KIENEMAN|::|Y|))
                |KIENEMAN|::|FIGHTER| ,@|KIENEMAN|::|BODY|)))
            (|KIENEMAN|::|DEF-STATEMETH|
             (|KIENEMAN|::|TITLE| |KIENEMAN|::|PARAMS| |COMMON-LISP|::|&BODY|
              |KIENEMAN|::|BODY|)
             `(|CLOS|::|DEFMETHOD| ,|KIENEMAN|::|TITLE|
               ((|KIENEMAN|::|STATE| ,',|COMMON-LISP|::|SYMBOL-NAME|)
                ,@|KIENEMAN|::|PARAMS|)
               (|KIENEMAN|::|FUNC-BODY| ,|KIENEMAN|::|BODY|)))
            (|KIENEMAN|::|MAKE-SYMBOL-FLET|
             (|KIENEMAN|::|FLIST| |COMMON-LISP|::|&REST| |COMMON-LISP|::|REST|)
             (|COMMON-LISP|::|IF| |KIENEMAN|::|FLIST|
              (|COMMON-LISP|::|LET|
               ((|KIENEMAN|::|NAME|
                 (|COMMON-LISP|::|CAAR| |KIENEMAN|::|FLIST|))
                (|KIENEMAN|::|BODY|
                 (|COMMON-LISP|::|CDAR| |KIENEMAN|::|FLIST|)))
               `(|COMMON-LISP|::|FLET|
                 ((,|KIENEMAN|::|NAME| (|KIENEMAN|::|STATE|)
                   (|KIENEMAN|::|FUNC-BODY| ,|KIENEMAN|::|BODY|)))
                 (|COMMON-LISP|::|SYMBOL-MACROLET|
                  ((,|KIENEMAN|::|NAME|
                    (,|KIENEMAN|::|NAME| |KIENEMAN|::|STATE|)))
                  (|KIENEMAN|::|MAKE-SYMBOL-FLET|
                   ,(|COMMON-LISP|::|CDR| |KIENEMAN|::|FLIST|)
                   ,@|COMMON-LISP|::|REST|))))
              `(|COMMON-LISP|::|PROGN| ,@|COMMON-LISP|::|REST|))))
           (|KIENEMAN|::|MAKE-SYMBOL-FLET| ,|KIENEMAN|::|FUNCS|
            (|KIENEMAN|::|DEF-STATEMETH| |KIENEMAN|::|MAIN-ACTION|
             |COMMON-LISP|::|NIL| ,@|KIENEMAN|::|MAIN-ACTION|)
            (|KIENEMAN|::|DEF-STATEMETH| |KIENEMAN|::|PRINT-STATE|
             |COMMON-LISP|::|NIL|
             (|COMMON-LISP|::|FORMAT| |COMMON-LISP|::|NIL|
              ,(|COMMON-LISP|::|CONCATENATE| '|COMMON-LISP|::|STRING| "~a~&"
                |KIENEMAN|::|PRINT-STR| "~&")
              (|KIENEMAN|::|CCNM|) ,@|KIENEMAN|::|PRINT-VALS|))
            ,(|COMMON-LISP|::|WHEN| |KIENEMAN|::|INITFUNC|
              (|COMMON-LISP|::|LET|
               ((|KIENEMAN|::|KEYARGS|
                 (|COMMON-LISP|::|CAR| |KIENEMAN|::|INITFUNC|))
                (|KIENEMAN|::|BODYFORMS|
                 (|COMMON-LISP|::|CADR| |KIENEMAN|::|INITFUNC|)))
               `(|CLOS|::|DEFMETHOD| |CLOS|::|INITIALIZE-INSTANCE| :|AFTER|
                 ((|KIENEMAN|::|STATE| ,|COMMON-LISP|::|SYMBOL-NAME|)
                  ,@|KIENEMAN|::|KEYARGS|)
                 ,@|KIENEMAN|::|BODYFORMS|)))
            ,(|COMMON-LISP|::|WHEN| |KIENEMAN|::|ENTRYFUNC|
              `(|CLOS|::|DEFMETHOD| |KIENEMAN|::|ENTER-STATE| :|AFTER|
                ((|KIENEMAN|::|FIGHTER| |KIENEMAN|::|FIGHTER|)
                 (|KIENEMAN|::|STATE| ,|COMMON-LISP|::|SYMBOL-NAME|))
                ,|KIENEMAN|::|ENTRYFUNC|))
            ,|COMMON-LISP|::|REST|)))))))))
  '(|KIENEMAN|::|NAME| |COMMON-LISP|::|&KEY| |KIENEMAN|::|SLOTS|
    |COMMON-LISP|::|REST| |KIENEMAN|::|SUPERS| |KIENEMAN|::|CONSTANTS|
    |KIENEMAN|::|FUNCS| |KIENEMAN|::|MAIN-ACTION| |KIENEMAN|::|INITFUNC|
    |KIENEMAN|::|ENTRYFUNC| (|COMMON-LISP|::|TYPE| #6#) (|KIENEMAN|::|HB| #8#)
    (|KIENEMAN|::|ANIMATION| #10#) (|KIENEMAN|::|LINEAR| |COMMON-LISP|::|T|)
    |KIENEMAN|::|ALT-NAME|)))
(|SYSTEM|::|C-DEFUN| '|KIENEMAN|::|MAKE-UNI-BOX|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|KIENEMAN|::|P| |KIENEMAN|::|X| |KIENEMAN|::|Y| |KIENEMAN|::|R|
    |KIENEMAN|::|H|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|MAKE-HITBOX-LIST|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|MAKE-HITBOX-LIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|MAKE-HITBOX-LIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|HITBOX-FORMS|
        (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|MAKE-HITBOX-LIST|
       `(|COMMON-LISP|::|LIST|
         ,@(|COMMON-LISP|::|MAPCAR|
            #'(|COMMON-LISP|::|LAMBDA| (|KIENEMAN|::|FORM|)
               (|COMMON-LISP|::|DESTRUCTURING-BIND|
                (|KIENEMAN|::|X| |KIENEMAN|::|Y| |KIENEMAN|::|R|
                 |KIENEMAN|::|H| |COMMON-LISP|::|&OPTIONAL|
                 |KIENEMAN|::|BINDING|)
                |KIENEMAN|::|FORM|
                `(|CLOS|::|MAKE-INSTANCE| '|KIENEMAN|::|UNI-BOX| :|PARENT|
                  |KIENEMAN|::|STATE| :|X| ,|KIENEMAN|::|X| :|Y|
                  ,|KIENEMAN|::|Y| :|RADIUS| ,|KIENEMAN|::|R| :|HEIGHT|
                  ,|KIENEMAN|::|H|)))
            |KIENEMAN|::|HITBOX-FORMS|)))))))
  '(|COMMON-LISP|::|&REST| |KIENEMAN|::|HITBOX-FORMS|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|KIENEMAN|::|SET-HITBOX-LIST|)
(|SYSTEM|::|%PUTD| '|KIENEMAN|::|SET-HITBOX-LIST|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |KIENEMAN|::|SET-HITBOX-LIST|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "When applied to a state with a multihitbox,
this macro will set the hitbox-list to one determined
by the hitbos forms passed to it."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|KIENEMAN|::|HITBOX-FORMS|
        (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |KIENEMAN|::|SET-HITBOX-LIST|
       `(|COMMON-LISP|::|SETF| (|KIENEMAN|::|HITBOX-LIST| |KIENEMAN|::|STATE|)
         (|KIENEMAN|::|MAKE-HITBOX-LIST| ,@|KIENEMAN|::|HITBOX-FORMS|)))))))
  '(|COMMON-LISP|::|&REST| |KIENEMAN|::|HITBOX-FORMS|)))
