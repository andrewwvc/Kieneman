#0Y |CHARSET|::|UTF-8|
(|SYSTEM|::|%IN-PACKAGE| "INFIX" :|NICKNAMES| '|COMMON-LISP|::|NIL| :|USE|
 '|COMMON-LISP|::|NIL| :|CASE-SENSITIVE| |COMMON-LISP|::|NIL| :|CASE-INVERTED|
 |COMMON-LISP|::|NIL|)
(|COMMON-LISP|::|USE-PACKAGE| '("COMMON-LISP") "INFIX")
(|COMMON-LISP|::|FIND-PACKAGE| "INFIX")
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "INFIX"))
(|SYSTEM|::|C-DEFUN| '|INFIX|::|NFX-OPERATOR-BASE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|INFIX|::|ACTION| |COMMON-LISP|::|&REST| |INFIX|::|PARAMS|)))
(|SYSTEM|::|C-DEFUN| '|INFIX|::|NFX-IMPL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|INFIX|::|S|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|INFIX|::|NFX|)
(|SYSTEM|::|%PUTD| '|INFIX|::|NFX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |INFIX|::|NFX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|INFIX|::|S| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |INFIX|::|NFX|
       (|INFIX|::|NFX-IMPL| |INFIX|::|S|))))))
  '(|COMMON-LISP|::|&REST| |INFIX|::|S|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|INFIX|::|DEFINFIX|)
(|SYSTEM|::|%PUTD| '|INFIX|::|DEFINFIX|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |INFIX|::|DEFINFIX|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|INFIX|::|OPERATOR|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (#2=#:|G5598| (|COMMON-LISP|::|CDDR| . #1#))
       (|INFIX|::|PRECEDENCE|
        (|COMMON-LISP|::|GETF| #2# ':|PRECEDENCE| . #3=(|COMMON-LISP|::|NIL|)))
       (|INFIX|::|ASSOCIATIVITY|
        (|COMMON-LISP|::|LET|
         ((#4=#:|KWD-ARG-5599|
           (|COMMON-LISP|::|GETF| #2# ':|ASSOCIATIVITY|
            '#5=(|COMMON-LISP|::|NIL|))))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #4# '#5#)
          (|COMMON-LISP|::|PROGN| :|LEFT|) #4#)))
       (|INFIX|::|FUNCTION-NAME|
        (|COMMON-LISP|::|GETF| #2# ':|FUNCTION-NAME| . #3#))
       (|INFIX|::|FUNGIBLE|
        (|COMMON-LISP|::|LET|
         ((#6=#:|KWD-ARG-5600| (|COMMON-LISP|::|GETF| #2# ':|FUNGIBLE| '#5#)))
         (|COMMON-LISP|::|IF| (|COMMON-LISP|::|EQ| #6# '#5#)
          (|COMMON-LISP|::|PROGN| |COMMON-LISP|::|T|) #6#))))
      (|SYSTEM|::|KEYWORD-TEST| #2#
       '(:|FUNGIBLE| :|FUNCTION-NAME| :|ASSOCIATIVITY| :|PRECEDENCE|))
      (|COMMON-LISP|::|BLOCK| |INFIX|::|DEFINFIX|
       `(|INFIX|::|NFX-OPERATOR-BASE| :|ADD| ',|INFIX|::|OPERATOR|
         ,|INFIX|::|PRECEDENCE| ,|INFIX|::|ASSOCIATIVITY|
         ',(|COMMON-LISP|::|IF| |INFIX|::|FUNCTION-NAME|
            |INFIX|::|FUNCTION-NAME| |INFIX|::|OPERATOR|)
         ,|INFIX|::|FUNGIBLE|))))))
  '(|INFIX|::|OPERATOR| |COMMON-LISP|::|&KEY| |INFIX|::|PRECEDENCE|
    (|INFIX|::|ASSOCIATIVITY| :|LEFT|) |INFIX|::|FUNCTION-NAME|
    (|INFIX|::|FUNGIBLE| |COMMON-LISP|::|T|))))
