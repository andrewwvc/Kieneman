#0Y |CHARSET|::|UTF-8|
(|COMMON-LISP|::|SETQ| |COMMON-LISP|::|*PACKAGE*|
 (|SYSTEM|::|%FIND-PACKAGE| "CL-STORE"))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*CHECK-FOR-CIRCS*|))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#1=#:|G6785|
    (|COMMON-LISP|::|CONS| '|CL-STORE|::|DELAY|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|)))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES| '|CL-STORE|::|DELAY|)
  (|COMMON-LISP|::|REMPROP| '|CL-STORE|::|DELAY|
   '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|)
  (|CLOS|::|DEFINE-STRUCTURE-CLASS| '|CL-STORE|::|DELAY| #1#
   '|CL-STORE|::|MAKE-DELAY| '|COMMON-LISP|::|NIL| '|CL-STORE|::|COPY-DELAY|
   '|CL-STORE|::|DELAY-P|
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|CL-STORE|::|VALUE| :|INITARGS| '#2=(:|VALUE|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #3='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #4=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|)
     #6='|CLOS|::|LOCATION| '1. #7='|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|)
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME|
     '|CL-STORE|::|COMPLETED| :|INITARGS| '#8=(:|COMPLETED|) :|TYPE|
     '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE| #3#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #9=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     #5# '(|COMMON-LISP|::|NIL|) #6# '2. #7# '|COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CL-STORE|::|VALUE|
     :|INITARGS| '#2# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     #10='|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #4#)
     #11='|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|CL-STORE|::|DELAY-VALUE|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)))
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME|
     '|CL-STORE|::|COMPLETED| :|INITARGS| '#8# :|TYPE| '|COMMON-LISP|::|T|
     :|ALLOCATION| ':|INSTANCE| #10#
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #9#)
     #11# '(|COMMON-LISP|::|NIL|) :|READERS| '(|CL-STORE|::|DELAY-COMPLETED|)
     :|WRITERS| '((|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)))))
  (|COMMON-LISP|::|DEFUN| |CL-STORE|::|MAKE-DELAY|
   (|COMMON-LISP|::|&KEY| (#12=#:|VALUE| |COMMON-LISP|::|NIL|)
    (#13=#:|COMPLETED| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LET|
    ((|SYSTEM|::|OBJECT| (|SYSTEM|::|%MAKE-STRUCTURE| #1# 3.)))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 1.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #12#))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 2.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #13#))
    |SYSTEM|::|OBJECT|)))
 (|COMMON-LISP|::|PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|DELAY-P|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|DELAY-P| (|SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-TYPE-P| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CL-STORE|::|COPY-DELAY|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|COPY-DELAY| (|COMMON-LISP|::|STRUCTURE|)
  (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CL-STORE|::|DELAY-VALUE| (|CL-STORE|::|DELAY|)
    |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CL-STORE|::|DELAY-VALUE|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|DELAY-VALUE| #14=(|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 1.)))
 (|SYSTEM|::|%PUT| '|CL-STORE|::|DELAY-VALUE| #15='|SYSTEM|::|DEFSTRUCT-READER|
  '|CL-STORE|::|DELAY|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CL-STORE|::|DELAY-COMPLETED|
    (|CL-STORE|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CL-STORE|::|DELAY-COMPLETED|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|DELAY-COMPLETED| #14#
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 2.)))
 (|SYSTEM|::|%PUT| '|CL-STORE|::|DELAY-COMPLETED| #15# '|CL-STORE|::|DELAY|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)
    (|COMMON-LISP|::|T| |CL-STORE|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)
  #16=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-STORE| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 1.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CL-STORE|::|DELAY-VALUE| #17='|SYSTEM|::|DEFSTRUCT-WRITER|
  '|CL-STORE|::|DELAY|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)
    (|COMMON-LISP|::|T| |CL-STORE|::|DELAY|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)
  #16#
  (|SYSTEM|::|%STRUCTURE-STORE| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 2.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CL-STORE|::|DELAY-COMPLETED| #17# '|CL-STORE|::|DELAY|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|DELAY| '|COMMON-LISP|::|TYPE|
  |COMMON-LISP|::|NIL|)
 (|CLOS|::|DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD| '|CL-STORE|::|DELAY|)
 '|CL-STORE|::|DELAY|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|MAKE-DELAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (#:|VALUE| |COMMON-LISP|::|NIL|)
    (#:|COMPLETED| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|DELAY-P|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|DELAY-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|DELAY-P|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|DELAY-P|
    (|SYSTEM|::|%STRUCTURE-TYPE-P| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|COPY-DELAY|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|COPY-DELAY|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|COMMON-LISP|::|STRUCTURE|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|COPY-DELAY|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|COPY-DELAY|
    (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CL-STORE|::|DELAY-VALUE| (|CL-STORE|::|DELAY|)
   |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|DELAY-VALUE|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|DELAY-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|DELAY-VALUE|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|DELAY-VALUE|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT|
      1.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CL-STORE|::|DELAY-COMPLETED|
   (|CL-STORE|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| |CL-STORE|::|DELAY-COMPLETED|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|DELAY-COMPLETED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|DELAY-COMPLETED|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|DELAY-COMPLETED|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT|
      2.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)
   (|COMMON-LISP|::|T| |CL-STORE|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-VALUE|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|DELAY-VALUE|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 1.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION|
   (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)
   (|COMMON-LISP|::|T| |CL-STORE|::|DELAY|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE|
   (|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CL-STORE|::|DELAY-COMPLETED|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|DELAY-COMPLETED|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CL-STORE|::|DELAY| |SYSTEM|::|OBJECT| 2.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|DELAY|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|DELAY|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|DELAY|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| |SYSTEM|::|<MACRO-FORM>|))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-STORE|::|BODY| (|COMMON-LISP|::|CDR| |SYSTEM|::|<MACRO-FORM>|)))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|DELAY|
       `(|CL-STORE|::|MAKE-DELAY| :|VALUE|
         #'(|COMMON-LISP|::|LAMBDA| |COMMON-LISP|::|NIL|
            ,@|CL-STORE|::|BODY|)))))))
  '(|COMMON-LISP|::|&REST| |CL-STORE|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|FORCE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|DELAY|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|SETTING|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|SETTING|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|SETTING|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Resolve the possible referring object retrieved by GET and 
  set it into PLACE. Only usable within a resolving-object form."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-STORE|::|PLACE|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|COMMON-LISP|::|GET| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |CL-STORE|::|PLACE| |COMMON-LISP|::|GET|))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|SETTING|
       (|COMMON-LISP|::|ERROR|
        "setting can only be used inside a resolving-object form."))))))
  '(|CL-STORE|::|PLACE| |COMMON-LISP|::|GET|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|SETTING-HASH|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|SETTING-HASH|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|SETTING-HASH|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Insert the value retrieved by GETTING-VALUE with the key 
  retrieved by GETTING-KEY, resolving possible circularities.
  Only usable within a resolving-object form."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 3.
       3.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((|CL-STORE|::|GETTING-KEY|
        (|COMMON-LISP|::|CADR| . #1=(|SYSTEM|::|<MACRO-FORM>|)))
       (|CL-STORE|::|GETTING-VALUE| (|COMMON-LISP|::|CADDR| . #1#)))
      (|COMMON-LISP|::|DECLARE|
       (|COMMON-LISP|::|IGNORE| |CL-STORE|::|GETTING-KEY|
        |CL-STORE|::|GETTING-VALUE|))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|SETTING-HASH|
       (|COMMON-LISP|::|ERROR|
        "setting-hash can only be used inside a resolving-object form."))))))
  '(|CL-STORE|::|GETTING-KEY| |CL-STORE|::|GETTING-VALUE|)))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|RESOLVING-OBJECT|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|RESOLVING-OBJECT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|RESOLVING-OBJECT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Execute body attempting to resolve circularities found in 
   form CREATE."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G6869| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G6870|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT|
          (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| #1# 2. 2.))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|CL-STORE|::|RESOLVING-OBJECT| #1#
          '#4=(|CL-STORE|::|VAR| |CL-STORE|::|CREATE|))
         #1#))
       (|CL-STORE|::|VAR| (|COMMON-LISP|::|CAR| #3#))
       (|CL-STORE|::|CREATE| (|COMMON-LISP|::|CADR| #3#))
       (|CL-STORE|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|RESOLVING-OBJECT|
       (|CL-STORE|::|WITH-GENSYMS| (|CL-STORE|::|VALUE| |CL-STORE|::|KEY|)
        `(|COMMON-LISP|::|MACROLET|
          ((|CL-STORE|::|SETTING| (|CL-STORE|::|PLACE| |CL-STORE|::|GETTING|)
            `(|COMMON-LISP|::|LET|
              ((,',|CL-STORE|::|VALUE| ,|CL-STORE|::|GETTING|))
              (|COMMON-LISP|::|IF|
               (|CL-STORE|::|REFERRER-P| ,',|CL-STORE|::|VALUE|)
               (|COMMON-LISP|::|IF| |CL-STORE|::|*CHECK-FOR-CIRCS*|
                (|COMMON-LISP|::|PUSH|
                 (|CL-STORE|::|DELAY|
                  (|COMMON-LISP|::|SETF| ,|CL-STORE|::|PLACE|
                   (|CL-STORE|::|REFERRED-VALUE| ,',|CL-STORE|::|VALUE|
                    |CL-STORE|::|*RESTORED-VALUES*|)))
                 |CL-STORE|::|*NEED-TO-FIX*|)
                (|CL-STORE|::|RESTORE-ERROR|
                 "Found a circular values with *check-for-circs* = nil"))
               (|COMMON-LISP|::|SETF| ,|CL-STORE|::|PLACE|
                ,',|CL-STORE|::|VALUE|))))
           (|CL-STORE|::|SETTING-HASH|
            (|CL-STORE|::|GETTING-KEY| |CL-STORE|::|GETTING-PLACE|)
            `(|COMMON-LISP|::|LET|
              ((,',|CL-STORE|::|KEY| ,|CL-STORE|::|GETTING-KEY|))
              (|COMMON-LISP|::|IF|
               (|CL-STORE|::|REFERRER-P| ,',|CL-STORE|::|KEY|)
               (|COMMON-LISP|::|LET|
                ((,',|CL-STORE|::|VALUE| ,|CL-STORE|::|GETTING-PLACE|))
                (|COMMON-LISP|::|UNLESS| |CL-STORE|::|*CHECK-FOR-CIRCS*|
                 (|CL-STORE|::|RESTORE-ERROR|
                  "Found a circular values with *check-for-circs* = nil"))
                (|COMMON-LISP|::|PUSH|
                 (|CL-STORE|::|DELAY|
                  (|COMMON-LISP|::|SETF|
                   (|COMMON-LISP|::|GETHASH|
                    (|CL-STORE|::|REFERRED-VALUE| ,',|CL-STORE|::|KEY|
                     |CL-STORE|::|*RESTORED-VALUES*|)
                    ,',|CL-STORE|::|VAR|)
                   (|COMMON-LISP|::|IF|
                    (|CL-STORE|::|REFERRER-P| ,',|CL-STORE|::|VALUE|)
                    (|CL-STORE|::|REFERRED-VALUE| ,',|CL-STORE|::|VALUE|
                     |CL-STORE|::|*RESTORED-VALUES*|)
                    ,',|CL-STORE|::|VALUE|)))
                 |CL-STORE|::|*NEED-TO-FIX*|))
               (|CL-STORE|::|SETTING|
                (|COMMON-LISP|::|GETHASH| ,',|CL-STORE|::|KEY|
                 ,',|CL-STORE|::|VAR|)
                ,|CL-STORE|::|GETTING-PLACE|)))))
          (|COMMON-LISP|::|LET| ((,|CL-STORE|::|VAR| ,|CL-STORE|::|CREATE|))
           ,@|CL-STORE|::|BODY| ,|CL-STORE|::|VAR|))))))))
  '(#4# |COMMON-LISP|::|&BODY| |CL-STORE|::|BODY|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|COMMON-LISP|::|LET|
  ((#1=#:|G6883|
    (|COMMON-LISP|::|CONS| '|CL-STORE|::|REFERRER|
     (|CLOS|::|CLASS-NAMES|
      (|COMMON-LISP|::|GET| '|COMMON-LISP|::|STRUCTURE-OBJECT|
       '|CLOS|::|CLOSCLASS|)))))
  (|SYSTEM|::|STRUCTURE-UNDEFINE-ACCESSORIES| '|CL-STORE|::|REFERRER|)
  (|COMMON-LISP|::|REMPROP| '|CL-STORE|::|REFERRER|
   '|SYSTEM|::|DEFSTRUCT-DESCRIPTION|)
  (|CLOS|::|DEFINE-STRUCTURE-CLASS| '|CL-STORE|::|REFERRER| #1#
   '|CL-STORE|::|MAKE-REFERRER| '|COMMON-LISP|::|NIL|
   '|CL-STORE|::|COPY-REFERRER| '|CL-STORE|::|REFERRER-P|
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-EFFECTIVE-SLOT-DEFINITION>| :|NAME| '|CL-STORE|::|VAL|
     :|INITARGS| '#2=(:|VAL|) :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION|
     ':|INSTANCE| '|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #3=(|SYSTEM|::|MAKE-CONSTANT-INITFUNCTION| |COMMON-LISP|::|NIL|))
     '|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) '|CLOS|::|LOCATION| '1.
     '|CLOS|::|READONLY| '|COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LIST|
    (|CLOS|::|MAKE-INSTANCE-<STRUCTURE-DIRECT-SLOT-DEFINITION>|
     |CLOS|::|<STRUCTURE-DIRECT-SLOT-DEFINITION>| :|NAME| '|CL-STORE|::|VAL|
     :|INITARGS| '#2# :|TYPE| '|COMMON-LISP|::|T| :|ALLOCATION| ':|INSTANCE|
     '|CLOS|::|INHERITABLE-INITER|
     (|CLOS|::|MAKE-INHERITABLE-SLOT-DEFINITION-INITER| '|COMMON-LISP|::|NIL|
      #3#)
     '|CLOS|::|INHERITABLE-DOC| '(|COMMON-LISP|::|NIL|) :|READERS|
     '(|CL-STORE|::|REFERRER-VAL|) :|WRITERS|
     '((|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)))))
  (|COMMON-LISP|::|DEFUN| |CL-STORE|::|MAKE-REFERRER|
   (|COMMON-LISP|::|&KEY| (#4=#:|VAL| |COMMON-LISP|::|NIL|))
   (|COMMON-LISP|::|LET|
    ((|SYSTEM|::|OBJECT| (|SYSTEM|::|%MAKE-STRUCTURE| #1# 2.)))
    (|COMMON-LISP|::|SETF|
     (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|REFERRER| |SYSTEM|::|OBJECT| 1.)
     (|COMMON-LISP|::|THE| |COMMON-LISP|::|T| #4#))
    |SYSTEM|::|OBJECT|)))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CL-STORE|::|REFERRER-P|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|REFERRER-P| (|SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-TYPE-P| '|CL-STORE|::|REFERRER| |SYSTEM|::|OBJECT|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CL-STORE|::|COPY-REFERRER|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|COPY-REFERRER|
  (|COMMON-LISP|::|STRUCTURE|)
  (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION| |CL-STORE|::|REFERRER-VAL|
    (|CL-STORE|::|REFERRER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE| |CL-STORE|::|REFERRER-VAL|))
 (|COMMON-LISP|::|DEFUN| |CL-STORE|::|REFERRER-VAL| (|SYSTEM|::|OBJECT|)
  (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
   (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|REFERRER| |SYSTEM|::|OBJECT| 1.)))
 (|SYSTEM|::|%PUT| '|CL-STORE|::|REFERRER-VAL| '|SYSTEM|::|DEFSTRUCT-READER|
  '|CL-STORE|::|REFERRER|)
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|FUNCTION|
    (|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)
    (|COMMON-LISP|::|T| |CL-STORE|::|REFERRER|) |COMMON-LISP|::|T|))
 (|COMMON-LISP|::|PROCLAIM|
  '(|COMMON-LISP|::|INLINE|
    (|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)))
 (|COMMON-LISP|::|DEFUN| (|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)
  (|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|)
  (|SYSTEM|::|%STRUCTURE-STORE| '|CL-STORE|::|REFERRER| |SYSTEM|::|OBJECT| 1.
   |SYSTEM|::|VALUE|))
 (|SYSTEM|::|%PUT| '|CL-STORE|::|REFERRER-VAL| '|SYSTEM|::|DEFSTRUCT-WRITER|
  '|CL-STORE|::|REFERRER|)
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|REFERRER| '|COMMON-LISP|::|TYPE|
  |COMMON-LISP|::|NIL|)
 (|CLOS|::|DEFSTRUCT-REMOVE-PRINT-OBJECT-METHOD| '|CL-STORE|::|REFERRER|)
 '|CL-STORE|::|REFERRER|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|MAKE-REFERRER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY| (#:|VAL| |COMMON-LISP|::|NIL|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|REFERRER-P|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|REFERRER-P|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|REFERRER-P|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|REFERRER-P|
    (|SYSTEM|::|%STRUCTURE-TYPE-P| '|CL-STORE|::|REFERRER|
     |SYSTEM|::|OBJECT|))))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|COPY-REFERRER|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|COPY-REFERRER|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|COMMON-LISP|::|STRUCTURE|))
 '(#1#
   (|COMMON-LISP|::|DECLARE|
    (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|COPY-REFERRER|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|COPY-REFERRER|
    (|COMMON-LISP|::|COPY-STRUCTURE| |COMMON-LISP|::|STRUCTURE|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| |CL-STORE|::|REFERRER-VAL|
   (|CL-STORE|::|REFERRER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM| '(|COMMON-LISP|::|INLINE| |CL-STORE|::|REFERRER-VAL|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|REFERRER-VAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '#1=(|SYSTEM|::|OBJECT|))
 '(#1#
   (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| |CL-STORE|::|REFERRER-VAL|))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|REFERRER-VAL|
    (|COMMON-LISP|::|THE| |COMMON-LISP|::|T|
     (|SYSTEM|::|%STRUCTURE-REF| '|CL-STORE|::|REFERRER| |SYSTEM|::|OBJECT|
      1.)))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|FUNCTION| (|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)
   (|COMMON-LISP|::|T| |CL-STORE|::|REFERRER|) |COMMON-LISP|::|T|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|INLINE| (|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)))
(|SYSTEM|::|C-DEFUN| '#1=(|COMMON-LISP|::|SETF| |CL-STORE|::|REFERRER-VAL|)
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '#2=(|SYSTEM|::|VALUE| |SYSTEM|::|OBJECT|))
 '(#2# (|COMMON-LISP|::|DECLARE| (|SYSTEM|::|IN-DEFUN| #1#))
   (|COMMON-LISP|::|BLOCK| |CL-STORE|::|REFERRER-VAL|
    (|SYSTEM|::|%STRUCTURE-STORE| '|CL-STORE|::|REFERRER| |SYSTEM|::|OBJECT| 1.
     |SYSTEM|::|VALUE|))))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|REFERRED-VALUE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-STORE|::|REFERRER| |CL-STORE|::|HASH|)))
(|COMMON-LISP|::|LET*| ((#1=#:|G6915| |CLOS|::|<STANDARD-CLASS>|))
 (|COMMON-LISP|::|APPLY| #'|CLOS|::|ENSURE-CLASS|
  '|CL-STORE|::|RESOLVING-BACKEND| :|DIRECT-SUPERCLASSES|
  (|COMMON-LISP|::|LIST| '|CL-STORE|::|BACKEND|) :|DIRECT-SLOTS|
  (|COMMON-LISP|::|LIST|) :|METACLASS| #1# :|DOCUMENTATION|
  '"A backend which does the setup for resolving circularities."
  (|COMMON-LISP|::|APPEND| '(:|FIXED-SLOT-LOCATIONS| |COMMON-LISP|::|NIL|)
   (|COMMON-LISP|::|LIST| :|DIRECT-DEFAULT-INITARGS| |COMMON-LISP|::|NIL|
    :|GENERIC-ACCESSORS| '|COMMON-LISP|::|T|))))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|TYPE|
   (|COMMON-LISP|::|OR| |COMMON-LISP|::|FIXNUM| |COMMON-LISP|::|NULL|)
   |CL-STORE|::|*STORED-COUNTER*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*STORED-COUNTER*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*STORED-VALUES*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*STORE-HASH-SIZE*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*GROUPED-STORE-HASH*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*GROUPED-RESTORE-HASH*|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|CREATE-SERIALIZE-HASH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|COMMON-LISP|::|&KEY|
    (|CL-STORE|::|SIZE| |CL-STORE|::|*STORE-HASH-SIZE*|))))
(|SYSTEM|::|REMOVE-OLD-DEFINITIONS| '|CL-STORE|::|WITH-SERIALIZATION-UNIT|)
(|SYSTEM|::|%PUTD| '|CL-STORE|::|WITH-SERIALIZATION-UNIT|
 (|SYSTEM|::|MAKE-MACRO|
  (|COMMON-LISP|::|FUNCTION| |CL-STORE|::|WITH-SERIALIZATION-UNIT|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<MACRO-FORM>| |SYSTEM|::|<ENV-ARG>|)
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|CONS| |SYSTEM|::|<MACRO-FORM>|))
    (|COMMON-LISP|::|DECLARE| (|COMMON-LISP|::|IGNORE| |SYSTEM|::|<ENV-ARG>|))
    "Executes body in a single serialization unit allowing various internal data
structures to be reused.
The keys store-hash and restore-hash are expected to be either nil or
hash-tables as produced by the function create-serialize-hash."
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<MACRO-FORM>| 2.))
     (|SYSTEM|::|MACRO-CALL-ERROR| |SYSTEM|::|<MACRO-FORM>|)
     (|COMMON-LISP|::|LET*|
      ((#1=#:|G6933| (|COMMON-LISP|::|CADR| . #2=(|SYSTEM|::|<MACRO-FORM>|)))
       (#3=#:|G6934|
        (|COMMON-LISP|::|IF|
         (|COMMON-LISP|::|NOT| (|EXT|::|PROPER-LIST-P| #1#))
         (|SYSTEM|::|ERROR-OF-TYPE| '|EXT|::|SOURCE-PROGRAM-ERROR| :|FORM|
          |SYSTEM|::|<MACRO-FORM>| :|DETAIL| #1#
          (|SYSTEM|::|TEXT| "~S: ~S does not match lambda list element ~:S")
          '|CL-STORE|::|WITH-SERIALIZATION-UNIT| #1#
          '#4=(|COMMON-LISP|::|&KEY| |CL-STORE|::|STORE-HASH|
               |CL-STORE|::|RESTORE-HASH|))
         #1#))
       (#5=#:|G6935| #3#)
       (|CL-STORE|::|STORE-HASH|
        (|COMMON-LISP|::|GETF| #5# ':|STORE-HASH| . #6=(|COMMON-LISP|::|NIL|)))
       (|CL-STORE|::|RESTORE-HASH|
        (|COMMON-LISP|::|GETF| #5# ':|RESTORE-HASH| . #6#))
       (|CL-STORE|::|BODY| (|COMMON-LISP|::|CDDR| . #2#)))
      (|SYSTEM|::|KEYWORD-TEST| #5# '(:|RESTORE-HASH| :|STORE-HASH|))
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|WITH-SERIALIZATION-UNIT|
       `(|COMMON-LISP|::|LET|
         ((|CL-STORE|::|*GROUPED-STORE-HASH*|
           (|COMMON-LISP|::|OR| ,|CL-STORE|::|STORE-HASH|
            (|CL-STORE|::|CREATE-SERIALIZE-HASH|)))
          (|CL-STORE|::|*GROUPED-RESTORE-HASH*|
           (|COMMON-LISP|::|OR| ,|CL-STORE|::|RESTORE-HASH|
            (|CL-STORE|::|CREATE-SERIALIZE-HASH|))))
         ,@|CL-STORE|::|BODY|))))))
  '(#4# |COMMON-LISP|::|&BODY| |CL-STORE|::|BODY|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|GET-STORE-HASH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|GET-RESTORE-HASH|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '|COMMON-LISP|::|NIL|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|BACKEND-STORE|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|BACKEND-STORE|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|SEEN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|OBJ|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|UPDATE-SEEN|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|OBJ|)))
(|COMMON-LISP|::|LET| |COMMON-LISP|::|NIL|
 (|SYSTEM|::|%PUT| '|CL-STORE|::|NOT-CIRC| '|SYSTEM|::|DEFTYPE-EXPANDER|
  (|COMMON-LISP|::|FUNCTION| #:|DEFTYPE-NOT-CIRC|
   (|COMMON-LISP|::|LAMBDA| (|SYSTEM|::|<DEFTYPE-FORM>|)
    (|COMMON-LISP|::|IF|
     (|COMMON-LISP|::|NOT|
      (|SYSTEM|::|PROPER-LIST-LENGTH-IN-BOUNDS-P| |SYSTEM|::|<DEFTYPE-FORM>| 1.
       1.))
     (|SYSTEM|::|TYPE-CALL-ERROR| |SYSTEM|::|<DEFTYPE-FORM>|)
     (|COMMON-LISP|::|LET*| |COMMON-LISP|::|NIL|
      (|COMMON-LISP|::|BLOCK| |CL-STORE|::|NOT-CIRC|
       '(|COMMON-LISP|::|OR| |COMMON-LISP|::|INTEGER|
         |COMMON-LISP|::|CHARACTER|
         (|COMMON-LISP|::|MEMBER| |COMMON-LISP|::|T|
          |COMMON-LISP|::|NIL|))))))))
 (|SYSTEM|::|%SET-DOCUMENTATION| '|CL-STORE|::|NOT-CIRC| '|COMMON-LISP|::|TYPE|
  '"Type grouping integers and characters, which we
  don't bother to check if they have been stored before")
 '|CL-STORE|::|NOT-CIRC|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|NEEDS-CHECKP|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|OBJ|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|STORE-REFERRER|
 '#(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|GET-REF|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|OBJ|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|BACKEND-STORE-OBJECT|
 #(3. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|TYPE|
   (|COMMON-LISP|::|OR| |COMMON-LISP|::|FIXNUM| |COMMON-LISP|::|NULL|)
   |CL-STORE|::|*RESTORE-COUNTER*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*RESTORE-COUNTER*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*NEED-TO-FIX*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*RESTORED-VALUES*|))
(|SYSTEM|::|C-PROCLAIM|
 '(|COMMON-LISP|::|SPECIAL| |CL-STORE|::|*RESTORE-HASH-SIZE*|))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|BACKEND-RESTORE|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|UPDATE-RESTORED|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-STORE|::|SPOT| |CL-STORE|::|VAL|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|HANDLE-NORMAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-STORE|::|BACKEND| |CL-STORE|::|READER| |CL-STORE|::|PLACE|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|REFERRERP|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|HANDLE-RESTORE|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE|
  '(|CL-STORE|::|PLACE| |CL-STORE|::|BACKEND|)))
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|BACKEND-RESTORE-OBJECT|
 #(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
   |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFMETHOD|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|INT-OR-CHAR-P|
 '#(2. 0. |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL| |COMMON-LISP|::|NIL|
    |COMMON-LISP|::|NIL|)
 |COMMON-LISP|::|NIL| '|CLOS|::|DEFGENERIC|)
(|SYSTEM|::|C-DEFUN| '|CL-STORE|::|NEW-VAL|
 (|SYSTEM|::|LAMBDA-LIST-TO-SIGNATURE| '(|CL-STORE|::|VAL|)))
